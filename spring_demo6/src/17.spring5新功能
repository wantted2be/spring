#1.整个Spring5框架的代码基于Java8，运行时兼容JDK9，许多不建议使用的类和方法在代码库中删除
#2.Spring 5.0框架自带了通用的日志封装 
###2.1Spring5已经移除Log4jConfigListener，官方建议使用Log4j2 
###2.2Spring5框架整合Log4j2
* 第一步 引入jar包  
![](.17.spring5新功能_images/601b868d.png)
* 第二步 创建log4j2.xml配置文件
```xml
<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，可以看到log4j2内部各种详细输出-->
<configuration status="INFO">
    <!--先定义所有的appender-->
    <appenders>
        <!--输出日志信息到控制台-->
        <console name="Console" target="SYSTEM_OUT">
            <!--控制日志输出的格式-->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </console>
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <!--root：用于指定项目的根日志，如果没有单独指定Logger，则会使用root作为默认的日志输出-->
    <loggers>
        <root level="info">
            <appender-ref ref="Console"/>
        </root>
    </loggers>
</configuration>
```
#3.Spring5框架核心容器支持@Nullable注解 
###3.1@Nullable注解可以使用在方法上面，属性上面，参数上面，表示方法返回可以为空，属性值可以为空，参数值可以为空
###3.2注解用在方法上面，方法返回值可以为空
![](.17.spring5新功能_images/4c7c6f0c.png)
###3.3注解使用在方法参数里面，方法参数可以为空
![](.17.spring5新功能_images/ad73d462.png)
###3.4注解使用在属性上面，属性值可以为空
![](.17.spring5新功能_images/7cda0f9c.png)
#4. Spring5核心容器支持函数式风格GenericApplicationContext
```java
//函数式风格创建对象，交给spring进行管理 
@Test 
public void testGenericApplicationContext() { 
    //1 创建GenericApplicationContext对象 
    GenericApplicationContext context = new GenericApplicationContext(); 
    //2 调用context的方法对象注册 
    context.refresh(); 
    context.registerBean("user1",User.class,() -> new User()); 
    //3 获取在spring注册的对象 
    // User user = (User)context.getBean("com.atguigu.spring5.test.User");
    User user = (User)context.getBean("user1"); 
    System.out.println(user); 
}
```
#5、Spring5支持整合JUnit5
###5.1 整合JUnit4
* 第一步 引入Spring相关针对测试依赖
* 第二步 创建测试类，使用注解方式完成 
###5.2 Spring5整合JUnit5
* 第一步 引入JUnit5的jar包
* 第二步 创建测试类，使用注解完成 
###5.3 使用一个复合注解替代上面两个注解完成整合